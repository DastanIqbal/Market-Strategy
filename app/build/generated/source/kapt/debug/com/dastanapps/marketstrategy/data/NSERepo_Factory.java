// Generated by Dagger (https://dagger.dev).
package com.dastanapps.marketstrategy.data;

import com.dastanapps.marketstrategy.di.models.AppDispatchers;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class NSERepo_Factory implements Factory<NSERepo> {
  private final Provider<NSEDataSource> nseDataProvider;

  private final Provider<AppDispatchers> dispatchersProvider;

  public NSERepo_Factory(Provider<NSEDataSource> nseDataProvider,
      Provider<AppDispatchers> dispatchersProvider) {
    this.nseDataProvider = nseDataProvider;
    this.dispatchersProvider = dispatchersProvider;
  }

  @Override
  public NSERepo get() {
    return newInstance(nseDataProvider.get(), dispatchersProvider.get());
  }

  public static NSERepo_Factory create(Provider<NSEDataSource> nseDataProvider,
      Provider<AppDispatchers> dispatchersProvider) {
    return new NSERepo_Factory(nseDataProvider, dispatchersProvider);
  }

  public static NSERepo newInstance(NSEDataSource nseData, AppDispatchers dispatchers) {
    return new NSERepo(nseData, dispatchers);
  }
}
