// Generated by Dagger (https://dagger.dev).
package com.dastanapps.marketstrategy.data;

import com.dastanapps.marketstrategy.di.models.AppDispatchers;
import com.dastanapps.marketstrategy.network.NetworkExecutor;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class NSEDataSource_Factory implements Factory<NSEDataSource> {
  private final Provider<NetworkExecutor> networkExecutorProvider;

  private final Provider<AppDispatchers> dispatcherProvider;

  public NSEDataSource_Factory(Provider<NetworkExecutor> networkExecutorProvider,
      Provider<AppDispatchers> dispatcherProvider) {
    this.networkExecutorProvider = networkExecutorProvider;
    this.dispatcherProvider = dispatcherProvider;
  }

  @Override
  public NSEDataSource get() {
    return newInstance(networkExecutorProvider.get(), dispatcherProvider.get());
  }

  public static NSEDataSource_Factory create(Provider<NetworkExecutor> networkExecutorProvider,
      Provider<AppDispatchers> dispatcherProvider) {
    return new NSEDataSource_Factory(networkExecutorProvider, dispatcherProvider);
  }

  public static NSEDataSource newInstance(NetworkExecutor networkExecutor,
      AppDispatchers dispatcher) {
    return new NSEDataSource(networkExecutor, dispatcher);
  }
}
